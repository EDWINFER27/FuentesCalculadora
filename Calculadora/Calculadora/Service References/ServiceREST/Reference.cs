//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Calculadora.ServiceREST {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceREST.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSuma", ReplyAction="http://tempuri.org/IService1/GetSumaResponse")]
        double GetSuma(double Numero1, double Numero2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSuma", ReplyAction="http://tempuri.org/IService1/GetSumaResponse")]
        System.Threading.Tasks.Task<double> GetSumaAsync(double Numero1, double Numero2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetResta", ReplyAction="http://tempuri.org/IService1/GetRestaResponse")]
        double GetResta(double Numero1, double Numero2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetResta", ReplyAction="http://tempuri.org/IService1/GetRestaResponse")]
        System.Threading.Tasks.Task<double> GetRestaAsync(double Numero1, double Numero2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMultiplicacion", ReplyAction="http://tempuri.org/IService1/GetMultiplicacionResponse")]
        double GetMultiplicacion(double Numero1, double Numero2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMultiplicacion", ReplyAction="http://tempuri.org/IService1/GetMultiplicacionResponse")]
        System.Threading.Tasks.Task<double> GetMultiplicacionAsync(double Numero1, double Numero2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDivision", ReplyAction="http://tempuri.org/IService1/GetDivisionResponse")]
        double GetDivision(double Numero1, double Numero2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDivision", ReplyAction="http://tempuri.org/IService1/GetDivisionResponse")]
        System.Threading.Tasks.Task<double> GetDivisionAsync(double Numero1, double Numero2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Calculadora.ServiceREST.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Calculadora.ServiceREST.IService1>, Calculadora.ServiceREST.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double GetSuma(double Numero1, double Numero2) {
            return base.Channel.GetSuma(Numero1, Numero2);
        }
        
        public System.Threading.Tasks.Task<double> GetSumaAsync(double Numero1, double Numero2) {
            return base.Channel.GetSumaAsync(Numero1, Numero2);
        }
        
        public double GetResta(double Numero1, double Numero2) {
            return base.Channel.GetResta(Numero1, Numero2);
        }
        
        public System.Threading.Tasks.Task<double> GetRestaAsync(double Numero1, double Numero2) {
            return base.Channel.GetRestaAsync(Numero1, Numero2);
        }
        
        public double GetMultiplicacion(double Numero1, double Numero2) {
            return base.Channel.GetMultiplicacion(Numero1, Numero2);
        }
        
        public System.Threading.Tasks.Task<double> GetMultiplicacionAsync(double Numero1, double Numero2) {
            return base.Channel.GetMultiplicacionAsync(Numero1, Numero2);
        }
        
        public double GetDivision(double Numero1, double Numero2) {
            return base.Channel.GetDivision(Numero1, Numero2);
        }
        
        public System.Threading.Tasks.Task<double> GetDivisionAsync(double Numero1, double Numero2) {
            return base.Channel.GetDivisionAsync(Numero1, Numero2);
        }
    }
}
